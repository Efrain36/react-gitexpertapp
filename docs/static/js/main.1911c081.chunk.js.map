{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAG7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBI,OACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAc,SAAAS,GAAG,OAAMP,GAAN,mBAAoBO,OACrCN,EAAc,MAMV,SACG,uBACSO,KAAK,OACLC,MAAOT,EACPU,SAnBM,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCTfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0DAE4CC,UAAUH,GAFtD,sDAICI,MAAMF,GAJP,cAIbG,EAJa,gBAKCA,EAAKC,OALN,uBAKbC,EALa,EAKbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAXrB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OACI,sBAAKc,UAAU,uDAAf,UACI,qBAAKC,IAAOf,EAAKgB,IAAKN,IACtB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECJwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAE/BqB,KAAK,GACLa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAoBJ,OAdIC,qBAAU,WAEFxB,EAAQC,GACHwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAK3B,CAACpB,IAGAqB,EDlB4BI,CAAazB,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACA,mCAAOpB,KACPoB,GAAW,wCACX,qBAAKJ,UAAU,YAAf,SAIYH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAESA,GADAA,EAAIC,aEbxBe,EAAe,WAGxB,MAAoCxC,mBAAS,CAAC,SAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAGA,OAEG,qCAEC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ0C,EAAWlB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEKA,SAAUA,GADLA,Y,MCnB1B4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1911c081.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    \r\nconst [inputValue, setInputValue] = useState(\"\")\r\n\r\nconst handleInputChange = (e) =>{\r\n    setInputValue( e.target.value )\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n     if(inputValue.trim().length > 2){\r\n    setCategories(cat =>  [inputValue,...cat]);\r\n    setInputValue('')\r\n     }\r\n}\r\n\r\n\r\n    return (\r\n        <form onSubmit= {handleSubmit}>\r\n           <input\r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange = { handleInputChange}\r\n           \r\n           />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=NxKxtaa6GgDxxzciWWwtb2WoRP1oJ4jx`\r\n\r\n    const resp =  await fetch(url);\r\n   const {data} = await resp.json();\r\n\r\n   const gifs = data.map(img => {\r\n       return {\r\n           id: img.id,\r\n           title: img.title,\r\n           url:img.images?.downsized_medium.url\r\n       }\r\n   })\r\n\r\n  return gifs;\r\n\r\n   \r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__slow\">\r\n            <img src = {url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    // const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3> { category }</h3> \r\n       {loading && <p>loading</p>}\r\n        <div className='card-grid'>\r\n            \r\n            \r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem \r\n                            key={img.id} \r\n                             {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(( ) => {\r\n\r\n            getGifs(category)\r\n                .then(img => {\r\n                    setState({\r\n                        data: img,\r\n                        loading: false\r\n                    })\r\n                })\r\n\r\n\r\n    },[category])\r\n\r\n\r\nreturn state;\r\n}  ","import { useState } from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\"\r\nimport { GifGrid } from \"./components/GifGrid\"\r\n\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['hola']);\r\n    \r\n   \r\n    return(\r\n\r\n       <> \r\n\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr />\r\n\r\n       \r\n        <ol>\r\n            {\r\n                categories.map( category =>(  \r\n                <GifGrid \r\n                     key={category}\r\n                     category={category}\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n\r\n       </> \r\n\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}